OPTIMA
**************************

Installation
====================

Requirements:

* python >= 3.6
* git

Ubuntu::

    sudo apt-get install python3 git

Windows (using chocolaty)::

    choco install python3 git -y

Steps to set up development environment:

Ubuntu::

    git clone https://openforge.isae.fr/git/optima
    cd optima/python
    python -m venv venv
    source venv/bin/activate
    pip3 install -r requirements.txt

For Windows, the only difference is using `venv\Scripts\activate` instead of `source venv/bin/activate`.
Also, in windows sometimes the installation of packages fails. In this case, the binaries for the specific package can be downloaded from https://www.lfd.uci.edu/~gohlke/pythonlibs and installed like so::

    pip3 install PATH/TO/DOWNLOADED/WHEEL.whl


Examples
==========

If not loaded, the python environment needs to be loaded:

    cd optima/python
    source venv/bin/activate

Example of using the template
----------------------------------

Then, the following command takes a given `template_in.xlsx` file inside the directory `201902141830`. Additionally, an `options_in.json` file can be next to the template file::

    python python/scripts/main.py -id optima/data/template/201902141830/

Other more advanced examples
----------------------------------

`exec_iteratively` and `main.py` both accept json-styled options. They replace the default parameters::

    python python/scripts/exec_iteratively.py -p "{\"results\": \"/home/pchtsp/Documents/projects/OPTIMA/results/\"}" -d "{\"solver\": \"CPLEX\"}" > log.txt &
    python python/scripts/exec_iteratively.py -p "{\"results\": \"/home/disc/f.peschiera/Documents/projects/optima/results/clust1_20181015/\"}" -d "{\"solver\": \"CPLEX\"}" > log_20181015.txt &
    python python/scripts/main.py -d "{\"solver\": \"GUROBI\"}" > log.txt &

Opening the graphical user interface
--------------------------------------

By passing the `gui` argument, the graphical user interface is opened::

    python python/scripts/main.py -gui


Output files
====================

The solving process creates several output files. Below a description of the files:

* **template_out.xlsx**:  output data following excel template.
* **output.log**:  solving process.
* **errors.json**:  best solution infeasibilities.
* **options.json**: all options used in the configuration.
* **data_in.json**: input data in json format.
* **data_out.json**: complete solution in json format.
* **solution.html**: web gantt produced with the best found solution.

Building and using the executable
==================================

Building
-----------

The following commands build the application in windows. **Warning**: it assumes a virtual environment named `venv` with the required packages is inside the python directory.

    ./build_dassault_win.bat

This file has some parameters that can be edited directly inside the file to control the target directory (default: `build_dassault_win`), the script with the configuration (default: `python/optima.spec`) and where to get the app icon (default: `python/desktop_app/plane.ico`).

Using the executable
----------------------

It's equivalent to calling the `main.py` script.

    TARGET/optima/optima.exe -id "C:\Users\pchtsp\Documents\projects\optima\data\template\201902141830\"

Example of opening the GUI app from compiled files
---------------------------------------------------

The easiest way to use the application is to double click in the `runOptima.bat` file that is generated by the compilation. It should open the application window.
An alternative is to run the application with the `-gui` flag:

    optima/optima.exe -gui
